let {createElement: č, useState: û, useEffect: ū, useRef: ü} = require('react'),
	[{render: O}, {parse: P}] = [require('react-dom'), require('query-string')],
	[{innerHeight: í, innerWidth: ì, location: L}, D] = [window, d => d || 500],
	[{search: S}, {floor: f, random: r, sqrt: q}, Ø] = [L, Math, []],
	[{d, c}, Ä, e] = [P(S), a => [...Array(a)], [0, 1, 2, 3, 5, 6, 7, 8]],
	[z, [G, i, g, F, Z]] = [f(q((í * ì) / D(c))), Ø],
	[R, C, M] = [f(í / z), f(ì / z), (n, s, q) => (n !== s && Š(q, n), n)],
	[H, l] = [f(í / R), Ä(R).map(() => Ä(C).map(() => r() < 0.4))],
	[š, Ō] = [q => [q[0] * H, q[1] * H, H, H], q => Š(q, (l[q[1]][q[0]] ^= 1))],
	E = (z, I, j, J) => (I && I <= R && J && J <= C ? [...z, [I, j - 1]] : z),
	Ę = (i, j) => (z, d) => E(z, i + (d % 3), j + f(d / 3), j + (d % 3)),
	k = l.map((r, i) => r.map((_, j) => e.reduce(Ę(i, j), Ø))),
	Š = (q, f) => [(Z.fillStyle = f ? '#000' : '#FFF'), Z.fillRect(...š(q))],
	ñ = ([j, i]) => k[i][j].reduce((a, [x, y]) => a + l[x - 1][y], 0),
	Ń = (q, s, p) => M(s ? f(q / 2) === 1 : q === 3, s, p),
	ç = () => l.map((r, Y) => r.map((s, X) => Ń(ñ([X, Y]), s, [X, Y]))),
	ł = e => Ō([f(e.clientX / H), f(e.clientY / H)]),
	å = () => (([Z, i] = [ã(), setInterval(â, D(d))]), () => clearInterval(i)),
	[ä, â] = [() => ([[g, G], F, e] = [û(1), ü(), ū(å)]), () => g && (l = ç())],
	[ß, J, I, ã] = ['50px', 'height', 'width', () => F.current.getContext`2d`],
	[œ, s] = ['onClick', {position: 'fixed', top: ß, left: ß, [J]: ß, [I]: ß}],
	á = g => ({[œ]: () => G(!g), style: {...s, background: g ? 'red' : 'tan'}}),
	æ = g => [č('button', á(g)), č('canvas', {ref: F, [œ]: ł, [I]: ì, [J]: í})];
O(č(() => (ä(), č('div', 0, ...æ(g)))), document.getElementById`root`);
